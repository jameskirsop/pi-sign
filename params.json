{"name":"Pi Sign","tagline":"Pi Sign - Digital Signage for the Raspberry Pi","body":"# Pi Sign - Digital Signage for the Raspberry Pi\r\n\r\nPi Sign is a fork of Wireload's successful [Screenly](https://github.com/wireload/screenly-ose/) project.\r\n\r\nThe current version, located in the development branch, should be consider a beta. It's currently in 'production' use to serve content on displays in an office environment, but there's a still a few kinks to work out.\r\n\r\nThere are many use cases where Pi Sign can be used, such as:\r\n\r\n * Display BI or server dashboards\r\n * Advertisements (in-store or in store-front)\r\n * Internal information boards\r\n * Fancy photo-frame\r\n\r\nA rought video of Screenly in action is available [here](http://www.youtube.com/watch?v=yjDjEfhspxk).\r\n\r\nScreenshots and pictures of Screenly are available [here](https://picasaweb.google.com/102112347693505491575/Screenly01?authkey=Gv1sRgCNa2qp-j5vWUGQ).\r\n\r\nA number of modifications have been made, or are in the pipeline, since the fork from Screenly. These include:\r\n * Proper scheduling of assets\r\n * A few UI tweaks and updates\r\n * A Shutdown schedule to ensure that the Pi and OS is safely switched off when a display is also scheduled to turn off.\r\n\r\n## How Pi Sign works\r\n\r\nOnce installed, Pi Sign can view images, videos and websites on the screen. You can configure your own playlist, and set the duration for how long each element should be viewed.\r\n\r\nHere's how you add content to your Screenly box:\r\n\r\n * Point your browser to the URL displayed on the screen at boot.\r\n * Click 'Add asset.'\r\n  * Provide a name of the asset, the URL to the asset, and the asset type and click 'Submit.'\r\n * Click 'Schedule asset.'\r\n  * Select the asset you just added in the drop-down, select the time frame you wish to display the asset and the duration (if image or website) and press 'Submit.'\r\n * Repeate for all the assets you want to display.\r\n\r\nNote: If you don't have any server where you can make your asset available, you can use [public folders](https://www.dropbox.com/help/16/en) in Dropbox. \r\n\r\n## Requirements\r\n\r\n * A Raspberry Pi 2 (it may work on a first generation model B, but I've not tested it).\r\n * An SD Card (>4GB).\r\n * A HDMI-cable.\r\n * A network connection (with DHCP).\r\n * A Keyboard and mouse (only required for the installation).\r\n * A monitor/TV that can view full HD (and has HDMI input).\r\n\r\n## Configure the Raspberry Pi\r\n\r\n * Flash the SD card and install [Raspbian](http://www.raspberrypi.org/downloads). Instructions are available [here](https://www.raspberrypi.org/documentation/installation/installing-images/README.md).\r\n * On first use the Raspi-Config utility to:\r\n  * Log in to the Desktop\r\n  * Expand the file system\r\n  * Enable SSH Access\r\n  * Adjust the Overscan settings if needed for your display\r\n * Make sure that the system's clock is configured for the proper timezone.\r\n\r\nPlease note that Pi Sign currently relies on the user 'pi', so don't change the username.\r\n\r\n## Install Pi Sign\r\n \r\nFor the current (Development) version open a terminal-window (or SSH-session) and as the user 'pi' run:\r\n\r\n    curl -sL https://raw.githubusercontent.com/jameskirsop/pi-sign/development/misc/install.sh | bash\r\n    cd ~/pi-sign/\r\n    git fetch\r\n    git checkout development\r\n    ./misc/install.sh\r\n\r\nAssuming everything went well, reboot your system. Pi Sign should now load.\r\n\r\nUpon boot, Pi Sign's URL should show up on the screen (e.g. http://aaa.bbb.ccc.ddd:8080).\r\n\r\n## Supported media\r\n\r\nPi Sign currently three types of media:\r\n\r\n * Videos\r\n  * Screenly uses [omxplayer](https://github.com/huceke/omxplayer/) as the video back-end. It is currently limited to MP4/h264-encoded videos.\r\n * Images\r\n * Web-pages\r\n\r\nAdobe Flash-media *is not* supported. \r\n\r\nImages and web-pages will be rendered to fill the display constraints - likely to be 1920x1080 on a modern display, so adjust your content for this size. \r\n\r\nIt is also worth noting that no media is permanently stored on the Raspberry Pi. All content is simply retrieved from the remote server (with limited caching in the browser).\r\n\r\n## Upgrade Pi Sign\r\n\r\nSince Pi Sign still is in beta (and you've probably used the instructions above), it's not unlikely that you'll run across bugs.\r\n\r\nTo upgrade Pi Sign, simply run (as the user 'pi'):\r\n\r\n    cd ~/pi-sign\r\n    git pull\r\n    \r\n## Licensing\r\n\r\nDual License: [GPLv2](http://www.gnu.org/licenses/gpl-2.0.html) and Commercial License. For more information, contact [WireLoad](http://wireload.net/company/). ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}